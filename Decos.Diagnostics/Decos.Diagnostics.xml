<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Decos.Diagnostics</name>
    </assembly>
    <members>
        <member name="T:Decos.Diagnostics.ExceptionData">
            <summary>
            Represents a logged exception.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.ExceptionData.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Decos.Diagnostics.ExceptionData"/> class with the specified context message and exception.
            </summary>
            <param name="context">A message that provides context for the error.</param>
            <param name="exception">The exception that represents the error that occurred</param>
        </member>
        <member name="P:Decos.Diagnostics.ExceptionData.Context">
            <summary>
            Gets a message that provides context for the error.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.ExceptionData.Exception">
            <summary>
            Gets the exception that represents the error that occurred.
            </summary>
        </member>
        <member name="T:Decos.Diagnostics.HttpLogstashClient">
            <summary>
            Represents a client of sending data to a Logstash HTTP input plugin.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.HttpLogstashClient.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Decos.Diagnostics.HttpLogstashClient"/> class with the specified endpoint.
            </summary>
            <param name="logstashEndpoint">The URI at which an Logstash HTTP input plugin is listening for POST requests.</param>
        </member>
        <member name="P:Decos.Diagnostics.HttpLogstashClient.Endpoint">
            <summary>
            Gets the URI at which an Logstash HTTP input plugin is listening for POST requests.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.HttpLogstashClient.LogAsync(Decos.Diagnostics.LogEntry)">
            <summary>
            Sends a log entry to Logstash.
            </summary>
            <param name="logEntry">The log entry to send.</param>
        </member>
        <member name="M:Decos.Diagnostics.HttpLogstashClient.LogAsync(Decos.Diagnostics.LogEntry,System.Threading.CancellationToken)">
            <summary>
            Sends a log entry to Logstash.
            </summary>
            <param name="logEntry">The log entry to send.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Decos.Diagnostics.ILog">
            <summary>
            Defines methods for writing events and data to a log.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.ILog.IsEnabled(Decos.Diagnostics.LogLevel)">
            <summary>
            Determines whether messages of the specified log level are accepted.
            </summary>
            <param name="logLevel">The log level to check.</param>
            <returns>
            <c>true</c> if message with the specified log level will be written
            to the log; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Decos.Diagnostics.ILog.Write(Decos.Diagnostics.LogLevel,System.String)">
            <summary>
            Writes a message to the log with the specified severity.
            </summary>
            <param name="logLevel">The severity of the message.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.ILog.Write``1(Decos.Diagnostics.LogLevel,``0)">
            <summary>
            Writes structured data to the log with the specified severity.
            </summary>
            <typeparam name="T">The type of data to write.</typeparam>
            <param name="logLevel">The severity of the data.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="T:Decos.Diagnostics.ILogFactory">
            <summary>
            Defines methods for creating <see cref="T:Decos.Diagnostics.ILog"/> instances.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.ILogFactory.Create``1">
            <summary>
            Creates a new <see cref="T:Decos.Diagnostics.ILog"/> instance that writes logging information for the specified type.
            </summary>
            <typeparam name="T">The type (e.g. class) that acts as the source of logging information.</typeparam>
            <returns>A new <see cref="T:Decos.Diagnostics.ILog"/> instance for the specified type.</returns>
        </member>
        <member name="M:Decos.Diagnostics.ILogFactory.Create(Decos.Diagnostics.SourceName)">
            <summary>
            Creates a new <see cref="T:Decos.Diagnostics.ILog"/> instance that write logging information with the specified name.
            </summary>
            <param name="name">A name for the source of the logging information.</param>
            <returns>A new <see cref="T:Decos.Diagnostics.ILog"/> instance with the specified name.</returns>
        </member>
        <member name="T:Decos.Diagnostics.LogEntry">
            <summary>
            Represents an entry in a log.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.LogEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Decos.Diagnostics.LogEntry"/> class.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.EventId">
            <summary>
            Gets or sets an event ID for the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.Level">
            <summary>
            Gets or sets a value that describes the severity level of the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.Source">
            <summary>
            Gets or sets the source of the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.Message">
            <summary>
            Gets or sets the message text of the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.HostName">
            <summary>
            Gets or sets the name or fully-qualified domain name of the host that created the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.ProcessId">
            <summary>
            Gets or sets the process ID of the process that created the log entry.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogEntry.ThreadId">
            <summary>
            Gets or sets the managed thread ID of the thread that created the log entry.
            </summary>
        </member>
        <member name="T:Decos.Diagnostics.LogExtensions">
            <summary>
            Provides a set of static methods for writing logging events and data.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Debug(Decos.Diagnostics.ILog,System.String)">
            <summary>
            Logs a verbose message for development or debugging purposes. These are not enabled in production by default and should only be enabled temporarily for troubleshooting.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Debug``1(Decos.Diagnostics.ILog,``0)">
            <summary>
            Logs verbose data for development or debugging purposes. These are not enabled in production by default and should only be enabled temporarily for troubleshooting.
            </summary>
            <typeparam name="T">The type of data to log.</typeparam>
            <param name="log">The log to write to.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Info(Decos.Diagnostics.ILog,System.String)">
            <summary>
            Logs an informational message. These  are typically used to track the general flow of an application and should have long-term value and.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Info``1(Decos.Diagnostics.ILog,``0)">
            <summary>
            Logs informational data. These are typically used to track the general flow of an application and should have long-term value .
            </summary>
            <typeparam name="T">The type of data to log.</typeparam>
            <param name="log">The log to write to.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Warn(Decos.Diagnostics.ILog,System.String)">
            <summary>
            Logs a warning message highlighting an abnormal or unexpected event.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Warn(Decos.Diagnostics.ILog,System.String,System.Exception)">
            <summary>
            Logs a recoverable error that does not cause the execution of an operation to stop but might need to be investigated later.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="context">A message that provides context for the error.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Warn``1(Decos.Diagnostics.ILog,``0)">
            <summary>
            Logs data highlighting an abnormal or unexpected event.
            </summary>
            <typeparam name="T">The type of data to log.</typeparam>
            <param name="log">The log to write to.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Error(Decos.Diagnostics.ILog,System.String)">
            <summary>
            Logs a message indicating a failure that causes the execution of an operation to stop.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Error(Decos.Diagnostics.ILog,System.String,System.Exception)">
            <summary>
            Logs an error that causes the execution of an operation to stop.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="context">A message that provides context for the error.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Error``1(Decos.Diagnostics.ILog,``0)">
            <summary>
            Logs data indicating a failure that causes the execution of an operation to stop.
            </summary>
            <typeparam name="T">The type of data to log.</typeparam>
            <param name="log">The log to write to.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Critical(Decos.Diagnostics.ILog,System.String)">
            <summary>
            Logs a message that requires immediate attention.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="message">The text of the message to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Critical(Decos.Diagnostics.ILog,System.String,System.Exception)">
            <summary>
            Logs an error that requires immediate attention.
            </summary>
            <param name="log">The log to write to.</param>
            <param name="context">A message that provides context for the error.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Decos.Diagnostics.LogExtensions.Critical``1(Decos.Diagnostics.ILog,``0)">
            <summary>
            Logs data that requires immediate attention.
            </summary>
            <typeparam name="T">The type of data to log.</typeparam>
            <param name="log">The log to write to.</param>
            <param name="data">The data to log.</param>
        </member>
        <member name="T:Decos.Diagnostics.LogFactoryBuilder">
            <summary>
            Provides <see cref="T:Decos.Diagnostics.ILogFactory"/> instances. Use one of the provided
            extension methods to specify which infrastructure to use.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.LogFactoryBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Decos.Diagnostics.LogFactoryBuilder"/>
            class.
            </summary>
        </member>
        <member name="T:Decos.Diagnostics.LogFactoryBuilder`1">
            <summary>
            Defines a class that provides <see cref="T:Decos.Diagnostics.ILogFactory"/> instances.
            </summary>
            <typeparam name="TOptions">The type of options to configure.</typeparam>
        </member>
        <member name="P:Decos.Diagnostics.LogFactoryBuilder`1.Options">
            <summary>
            Gets the currently configured logging options.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.LogFactoryBuilder`1.ConfigureOptions(System.Action{`0})">
            <summary>
            Specifies additional logging options.
            </summary>
            <param name="configure">
            A method that configures the logging options to be created.
            </param>
            <returns>A reference to this builder.</returns>
        </member>
        <member name="M:Decos.Diagnostics.LogFactoryBuilder`1.Build">
            <summary>
            Creates a new <see cref="T:Decos.Diagnostics.ILogFactory"/> instance with the configured
            options.
            </summary>
            <returns>A new <see cref="T:Decos.Diagnostics.ILogFactory"/> instance.</returns>
        </member>
        <member name="T:Decos.Diagnostics.LogFactoryOptions">
            <summary>
            Represents options for specifying the behavior of the log factory classes
            and the instances they create.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogFactoryOptions.DefaultMinimumLogLevel">
            <summary>
            Gets or sets the minimum severity level that messages must have to be
            written to a log if no other filters match.
            </summary>
        </member>
        <member name="P:Decos.Diagnostics.LogFactoryOptions.Filters">
            <summary>
            Gets a dictionary that specifies the minimum severity levels that
            messages from certain sources must have to be written to a log.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.LogFactoryOptions.GetLogLevel(Decos.Diagnostics.SourceName)">
            <summary>
            Determines the minimum severity level messages from the specified
            source must have to be written to a log.
            </summary>
            <param name="name">The name of the source to check.</param>
            <returns>
            The minimum <see cref="T:Decos.Diagnostics.LogLevel"/> message from <paramref
            name="name"/> must have to be written to a log.
            </returns>
        </member>
        <member name="T:Decos.Diagnostics.LogLevel">
            <summary>
            Defines severity levels of log messages.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.None">
            <summary>
            Not used for writing log messages. Specifies that a logging category
            should not write any messages.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.Debug">
            <summary>
            Logs that may be useful in development and debugging. These logs
            should only be enabled in production during troubleshooting.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application. These logs
            should have long-term value.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the
            application flow. These logs may include errors that do not cause the
            operation to stop but might need to be investigated, such as handled
            exceptions.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due
            to a failure. These should indicate a failure in the current
            activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Decos.Diagnostics.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or
            anything else that requires immediate attention.
            </summary>
        </member>
        <member name="M:Decos.Diagnostics.SourceName.Matches(Decos.Diagnostics.SourceName)">
            <summary>
            Determines whether a source with this name would be included in the
            specified filter.
            </summary>
            <param name="filter">The source name filter.</param>
            <returns>
            <c>true</c> if <paramref name="filter"/> matches this source name;
            otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
